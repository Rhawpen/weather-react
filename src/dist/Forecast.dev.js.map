{"version":3,"sources":["Forecast.js"],"names":["Forecast","coordinate","days","loaded","setLoaded","forecastData","setForecastData","showForecast","response","data","daily","map","forecastDay","index","day","Date","time","getDay","apiKey","apiUrl","longitude","latitude","axios","get","then"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;AAEe,SAASA,QAAT,OAA+B;AAAA,MAAZC,UAAY,QAAZA,UAAY;AAC5C,MAAMC,IAAI,GAAG,CAAC,KAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,KAArB,EAA4B,MAA5B,EAAoC,KAApC,EAA2C,KAA3C,CAAb;;AAD4C,kBAEhB,qBAAS,KAAT,CAFgB;AAAA;AAAA,MAErCC,MAFqC;AAAA,MAE7BC,SAF6B;;AAAA,mBAGJ,qBAAS,IAAT,CAHI;AAAA;AAAA,MAGrCC,YAHqC;AAAA,MAGvBC,eAHuB;;AAK5C,WAASC,YAAT,CAAuBC,QAAvB,EAAgC;AAC9BJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,eAAe,CAACE,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAf;AACD;;AAED,MAAGP,MAAH,EAAU;AACR;AACAE,IAAAA,YAAY,CAACM,GAAb,CAAiB,UAACC,WAAD,EAAcC,KAAd,EAAsB;AACvC,UAAIC,GAAG,GAAG,IAAIC,IAAJ,CAASV,YAAY,CAACQ,KAAD,CAAZ,CAAoBG,IAApB,GAA2B,IAApC,EAA0CC,MAA1C,EAAV;AAGD,KAJC;AAKH,GAPC,MASI;AACF,QAAMC,MAAM,GAAG,kCAAf;AACA,QAAMC,MAAM,6DAAsDlB,UAAU,CAACmB,SAAjE,kBAAkFnB,UAAU,CAACoB,QAA7F,kBAA6GH,MAA7G,kBAAZ;;AAEAI,sBAAMC,GAAN,CAAUJ,MAAV,EAAkBK,IAAlB,CAAuBjB,YAAvB;;AACA,WAAO,IAAP;AACD;AACF","sourcesContent":["import axios from \"axios\";\r\nimport React, {useState} from \"react\";\r\n\r\nexport default function Forecast({coordinate}){\r\n  const days = [\"Sun\",\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"]\r\n  const [loaded, setLoaded] = useState(false)\r\n  const [forecastData, setForecastData] = useState(null)\r\n\r\n  function showForecast (response){\r\n    setLoaded(true)\r\n    setForecastData(response.data.daily);\r\n  }\r\n  \r\n  if(loaded){\r\n    // console.log(days[day])\r\n    forecastData.map((forecastDay, index)=>{\r\n    let day = new Date(forecastData[index].time * 1000).getDay();\r\n\r\n   \r\n  })\r\n}\r\n\r\n  else{\r\n    const apiKey = \"ff304a92t9c244dc46fb12f2cefo3e03\";\r\n    const apiUrl = `https://api.shecodes.io/weather/v1/forecast?lon=${coordinate.longitude}&lat=${coordinate.latitude}&key=${apiKey}&units=metric`;\r\n\r\n    axios.get(apiUrl).then(showForecast)\r\n    return null\r\n  }\r\n}"],"file":"Forecast.dev.js"}