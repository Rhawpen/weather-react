{"version":3,"sources":["Weather.js"],"names":["_react","_interopRequireWildcard","require","_Date","_interopRequireDefault","Weather","_useState2","_slicedToArray","useState","weather","ready"],"mappings":"6UAAA,IAAAA,OAAAC,wBAAAC,QAAA,UACAC,MAAAC,uBAAAF,QAAA,wyCAGe,SAASG,UAAS,IAAAC,EAAAC,gBACH,EAAAP,OAAAQ,UAAS,MADN,GACxBC,EADwBH,EAAA,GAAAA,EAAA,GAqB5BG,EAAQC,MAvBbR,QAAA","file":"Weather.min.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport Date from \"./Date\";\r\nimport \"./App.css\"\r\n\r\nexport default function Weather(){\r\n  const [weather, setWeather]=useState(null)\r\n\r\n  function showWeather(response){\r\n    // console.log(response.data)\r\n    let data = new Date(response.data.time * 1000)\r\n    console.log(data)\r\n    setWeather({\r\n      ready: true,\r\n      city: response.data.city,\r\n      country: response.data.country,\r\n      temperature: response.data.temperature.current,\r\n      humidity: response.data.temperature.humidity,\r\n      wind: response.data.wind.speed,\r\n      description: response.data.condition.description,\r\n      icon_url: response.data.condition.icon_url,\r\n      icon: response.data.condition.icon,\r\n      date: new Date(response.data.time * 1000)\r\n    });\r\n  }\r\n    \r\n  if(weather.ready){\r\n    return\r\n }\r\n}"]}