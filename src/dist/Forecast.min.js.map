{"version":3,"sources":["Forecast.js"],"names":["_axios","_interopRequireDefault","require","_react","_interopRequireWildcard","Forecast","_ref","coordinate","_useState2","_slicedToArray","useState","loaded","setLoaded","_useState4","forecastData","setForecastData","apiUrl","concat","longitude","latitude","axios","get","then","response","data","daily","map","forecastDay","index","Date","time","getDay"],"mappings":"8UAAA,IAAAA,OAAAC,uBAAAC,QAAA,UACAC,OAAAC,wBAAAF,QAAA,uyCAEe,SAASG,SAATC,GAA+B,IAAZC,EAAYD,EAAZC,WAAYC,EAAAC,gBAEhB,EAAAN,OAAAO,WAAS,GAFO,GAErCC,EAFqCH,EAAA,GAE7BI,EAF6BJ,EAAA,GAAAK,EAAAJ,gBAGJ,EAAAN,OAAAO,UAAS,MAHL,GAGrCI,EAHqCD,EAAA,GAGvBE,EAHuBF,EAAA,GAU5C,IAAGF,EASC,CACF,IACMK,EAAM,mDAAAC,OAAsDV,EAAWW,UAAjE,SAAAD,OAAkFV,EAAWY,SAA7F,SAAAF,OADG,mCACH,iBArBD,OAuBXG,OAAAA,QAAMC,IAAIL,GAAQM,KAlBpB,SAAuBC,GARzBX,GAAA,GAUIG,EAAgBQ,EAASC,KAAKC,SAPVpB,KAYpBS,EAAaY,IAAI,SAACC,EAAaC,GACrB,IAAIC,KAAgC,IAA3Bf,EAAac,GAAOE,MAAaC","file":"Forecast.min.js","sourcesContent":["import axios from \"axios\";\r\nimport React, {useState} from \"react\";\r\n\r\nexport default function Forecast({coordinate}){\r\n  const days = [\"Sun\",\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"]\r\n  const [loaded, setLoaded] = useState(false)\r\n  const [forecastData, setForecastData] = useState(null)\r\n\r\n  function showForecast (response){\r\n    setLoaded(true)\r\n    setForecastData(response.data.daily);\r\n  }\r\n  \r\n  if(loaded){\r\n    // console.log(days[day])\r\n    forecastData.map((forecastDay, index)=>{\r\n    let day = new Date(forecastData[index].time * 1000).getDay();\r\n\r\n   \r\n  })\r\n}\r\n\r\n  else{\r\n    const apiKey = \"ff304a92t9c244dc46fb12f2cefo3e03\";\r\n    const apiUrl = `https://api.shecodes.io/weather/v1/forecast?lon=${coordinate.longitude}&lat=${coordinate.latitude}&key=${apiKey}&units=metric`;\r\n\r\n    axios.get(apiUrl).then(showForecast)\r\n    return null\r\n  }\r\n}"]}